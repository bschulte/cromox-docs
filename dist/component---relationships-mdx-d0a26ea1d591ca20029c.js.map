{"version":3,"sources":["webpack:///../relationships.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,+KAEA,0GACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,+GAUL,qBAAG,sBAAQA,WAAW,KAAnB,aAAH,oDAC6C,kBAAIA,WAAW,KAAf,QAD7C,2BAEA,kHAAiG,0BAAYA,WAAW,KAAvB,gBAAjG,qCAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,0MAeL,wCAAuB,0BAAYA,WAAW,KAAvB,OAAvB,0FACA,gEAA+C,0BAAYA,WAAW,KAAvB,UAA/C,8E,iMAKJJ,EAAWK,gBAAiB","file":"component---relationships-mdx-d0a26ea1d591ca20029c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bschulte/webdev/cromox-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"relationships\"\n    }}>{`Relationships`}</h1>\n    <p>{`Lists don't have to exist in isolation. You can have lists be related to one another in the same way you\nwould noramlly structure data in a database.`}</p>\n    <p>{`You can create a list that will be created as a subdocument to another list with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`zCloud.createSubList(\"SubThing\", {\n  fields: {\n    title: {\n      fieldType: Text,\n    },\n  },\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Important`}</strong>{`\nA sublist that will be related to another list `}<em parentName=\"p\">{`must`}</em>{` be declared before it.`}</p>\n    <p>{`Once a sublist is declared, a list can then reference it with a particular type of field: `}<inlineCode parentName=\"p\">{`Relationship`}</inlineCode>{`\nThis would look something like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  zCloud.createList(\"Thing\", {\n    ...\n\n    fields: {\n      ...\n      subThings: {\n        fieldType: Relationship,\n        ref: \"SubThing\",\n        isMany: true,\n      },\n    },\n  });\n`}</code></pre>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` attribute to specify the name of the field that will be created for the relationship.`}</p>\n    <p>{`As with all fields, you can specify the `}<inlineCode parentName=\"p\">{`isMany`}</inlineCode>{` flag to dictate if the field should be an array of the type or not.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}