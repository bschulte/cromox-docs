{"version":3,"sources":["webpack:///../authentication.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,0PAEA,sBACE,kBAAIC,WAAW,MAAf,SACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,WAEF,oFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,sHAOL,gLAEA,qBAAG,0BAAYA,WAAW,KAAvB,sBACH,kH,kMAKJJ,EAAWK,gBAAiB","file":"component---authentication-mdx-bf57638c411e7bef0018.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bschulte/webdev/cromox-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Cromox allows for multiple types of authentication. By default, only local authentication is enabled. When creating the app,\nyou can specify all the types of authentication you want to allow. The provided methods so far are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Local`}</li>\n      <li parentName=\"ul\">{`Google`}</li>\n      <li parentName=\"ul\">{`Facebook`}</li>\n      <li parentName=\"ul\">{`Github`}</li>\n      <li parentName=\"ul\">{`Twitch`}</li>\n    </ul>\n    <p>{`When providing your choices to the app, it would look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const cCloud = new Cromox({\n  ...\n  authStrategies: [\"local\", \"google\", \"facebook\", \"github\", \"twitch\"],\n});\n`}</code></pre>\n    <p>{`The local authentication is provided via the GraphQL app, but the 3rd party methods are provided via standard HTTP routes.\nThe routes are provided as:`}</p>\n    <p><inlineCode parentName=\"p\">{`/auth/\\${authType}`}</inlineCode></p>\n    <p>{`If a user doesn't exist with the given login methods ID, one is created by default.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}